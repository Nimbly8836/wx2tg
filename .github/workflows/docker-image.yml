name: Docker Image CI

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  build:
    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            runs-on: ubuntu-latest
            docker-platform: linux/amd64
          - platform: arm64
            runs-on: ubuntu-latest
            docker-platform: linux/arm64/v8

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate App Version
        run: echo APP_VERSION=`git describe --tags --always` >> $GITHUB_ENV

      - name: Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            var-cache-apt
            var-lib-apt
          key: cache-${{ matrix.platform }}-${{ hashFiles('Dockerfile') }}

      - name: Inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            xleat/wx2tg:${{ github.ref_name }}-${{ matrix.platform }}
            xleat/wx2tg:latest-${{ matrix.platform }}
          platforms: ${{ matrix.docker-platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          provenance: false

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest
        run: |
          VERSION=${{ github.ref_name }}
          
          # Create and push version-specific manifest
          docker manifest create xleat/wx2tg:$VERSION \
            --amend xleat/wx2tg:$VERSION-amd64 \
            --amend xleat/wx2tg:$VERSION-arm64
          docker manifest push xleat/wx2tg:$VERSION
          
          # Create and push latest manifest 
          docker manifest create xleat/wx2tg:latest \
            --amend xleat/wx2tg:latest-amd64 \
            --amend xleat/wx2tg:latest-arm64
          docker manifest push xleat/wx2tg:latest

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: xleat/wx2tg
          short-description: 'telegram收发微信消息'